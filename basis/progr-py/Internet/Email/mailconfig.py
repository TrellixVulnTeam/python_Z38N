"""
多个电子邮件程序(pymail/mailtools版本)的用户配置设定，电子邮件脚本从该脚本获取其
服务器名称与其它电子邮件配置选项：改变我来体现你的服务器名称和邮件偏好。
"""

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (对于载入和删除是必须的：所有) POP3电子邮件服务器机器名，用户
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
popservername = 'pop.qq.com'
popusername = 'user_siri@foxmail.com'

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (对于发送是必须的：所有脚本) SMTP电子邮件服务器机器名
# 关于如何本地运行SMTP服务器类请参考Python smptd模块
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
smtpservername = 'smtp.qq.com'

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (可选：所有脚本)如果存在，客户端填写在邮件里的个人信息
# 签名 ---- 可以是一个三引号括起来的字符串块，如果是空字符串则自动忽略
# 地址 ---- 如果非空，则用作"From"文本域的初始值
# 不要试图在回复时猜测From，这么做效果不确定
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
myaddress = 'user_siri@foxmail.com'
# pop.163.com
mysignature = 'Hey! This is siri.'

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (可选：mailtools)对于发送可能是必须的，如果需要验证则提供SMTP用户名/密码，如果
# 不需要登录/验证则将用户设置为None或''，将密码设为包含你的SMTP密码的文件的名称，
# 或设为空字符串以便让程序询问密码(在控制台或GUI中)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
smtpuser = 'user_bigsir@163.com'           # 因ISP而异
smtppasswdfile = ''                        # 想让程序询问则设为''

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (可选：mailtools)含有你的pop密码的本地单行文本文件的名称；如果文件为空或不能
# 读取，则在首次连接时询问密码，密码不能加密，在公用及其上不给这个设置赋值
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
poppasswdfile = r'c:\temp\pymailgui.txt'   # 想让程序询问则设为'

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (必须：mailtools)某些客户端保存已发信息的本地文件
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
sentmailfile = r'.\sentmail.txt'           # .代表当前工作目录

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (必须：pymail, pymai2)pymail在收到请求后保存pop邮件的本地文件
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
savemailfile = r'.\savemail.txt'          # 不在PyMailGUI中使用：对话框

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (必须：pymail, mailtools)fetchEncoding是Unicode编码，用于解码所抓取的完整消息字
# 节，以及编码和解码文本模式保存文件里所存储的消息文本；在更加字节友好的email包开
# 发出来之前，这是针对Unicode编码的一个有限的临时解决办法；headersEncodeTo用于已发
# 送的题头
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
fetchEncoding = 'utf-8'                    # 如何解码和保存消息文本(不然latin1?)
headersEncodeTo = None                    # 如何编码已发送的非ASCII题头(None代表utf8)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# (可选：mailtools)每次载入请求所下载的邮件题头或消息的最大数目；如果这个设置为N，
# 那么mailtools抓取，但是会返回为空/假电子邮件；如果这个变量赋值为None(或0)，则载入
# 无此限制，如果你的收件箱有太多邮件，或者互联网连接或邮件服务器慢到完全载入不太现实，
# 那么可以使用此功能；某些客户端只载入新邮件，不过此设置独立于这个特性；
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
fetchlimit = 25                            # 载入时所抓取的题头/电子邮件的最大数目
